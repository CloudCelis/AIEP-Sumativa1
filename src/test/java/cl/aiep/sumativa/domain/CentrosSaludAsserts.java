package cl.aiep.sumativa.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CentrosSaludAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCentrosSaludAllPropertiesEquals(CentrosSalud expected, CentrosSalud actual) {
        assertCentrosSaludAutoGeneratedPropertiesEquals(expected, actual);
        assertCentrosSaludAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCentrosSaludAllUpdatablePropertiesEquals(CentrosSalud expected, CentrosSalud actual) {
        assertCentrosSaludUpdatableFieldsEquals(expected, actual);
        assertCentrosSaludUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCentrosSaludAutoGeneratedPropertiesEquals(CentrosSalud expected, CentrosSalud actual) {
        assertThat(expected)
            .as("Verify CentrosSalud auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCentrosSaludUpdatableFieldsEquals(CentrosSalud expected, CentrosSalud actual) {
        assertThat(expected)
            .as("Verify CentrosSalud relevant properties")
            .satisfies(e -> assertThat(e.getCentroSaludID()).as("check centroSaludID").isEqualTo(actual.getCentroSaludID()))
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getDireccion()).as("check direccion").isEqualTo(actual.getDireccion()))
            .satisfies(e -> assertThat(e.getTelefono()).as("check telefono").isEqualTo(actual.getTelefono()))
            .satisfies(e -> assertThat(e.getVigente()).as("check vigente").isEqualTo(actual.getVigente()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCentrosSaludUpdatableRelationshipsEquals(CentrosSalud expected, CentrosSalud actual) {
        // empty method
    }
}
